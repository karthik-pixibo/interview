// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-01-28 22:41:41.4599872 -0500 EST m=+0.038000101

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/echo": {
            "post": {
                "description": "Return the matrix as a string in matrix format.",
                "consumes": [
                    "multipart/form-data"
                ],
                "summary": "Echo",
                "operationId": "echo.upload",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Comma Seperated Matrix data",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "1,2,3\u003cbr /\u003e4,5,6\u003cbr /\u003e7,8,9",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/flatten": {
            "post": {
                "description": "Return the matrix as a 1 line string, with values separated by commas.",
                "consumes": [
                    "multipart/form-data"
                ],
                "summary": "Flatten",
                "operationId": "flatten.upload",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Comma Seperated Matrix data",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "1,2,3,4,5,6,7,8,9",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/invert": {
            "post": {
                "description": "Return the matrix as a string in matrix format where the columns and rows are inverted",
                "consumes": [
                    "multipart/form-data"
                ],
                "summary": "Invert",
                "operationId": "invert.upload",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Comma Seperated Matrix data",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "1,2,3\u003cbr /\u003e4,5,6\u003cbr /\u003e7,8,9",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/multiply": {
            "post": {
                "description": "Return the product of the integers in the matrix",
                "consumes": [
                    "multipart/form-data"
                ],
                "summary": "Multiply",
                "operationId": "multiply.upload",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Comma Seperated Matrix data",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "362880",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sum": {
            "post": {
                "description": "Return the sum of the integers in the matrix",
                "consumes": [
                    "multipart/form-data"
                ],
                "summary": "Sum",
                "operationId": "sum.upload",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Comma Seperated Matrix data",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "45",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
